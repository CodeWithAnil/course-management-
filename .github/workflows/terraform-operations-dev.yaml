name: "Terraform Operations for Dev"

on:
  push:
    branches:
      - feature/infra-provisioning
      # - dev
    paths:
      - "platforms/nt-aws/infra/**"
      - ".github/workflows/terraform-operations-dev.yaml"

  workflow_dispatch:
    inputs:
      operation:
        type: choice
        description: Operation
        required: false
        options:
          - plan
          - apply

env:
  tf_version: "1.3.3"
  tg_version: "0.40.1"
  target_operation: "${{ github.event.inputs.operation || 'plan' }}"
  target_environment: dev
  working_dir: "/home/runner/work/plasma-lms-course-service/plasma-lms-course-service/platforms/nt-aws/infra/terragrunt"
  role_to_assume: "arn:aws:iam::547568624982:role/infra-portal-dev-github-actions-role"
  aws_region: "us-west-2"

jobs:
  setup_environment:
    name: "Setup Environment"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Print Values
        run: |
          echo "Working Dir: ${{ env.working_dir }}/${{ env.target_environment }}"
    outputs:
      target_operation: ${{ env.target_operation }}
      working_dir: ${{ env.working_dir }}/${{ env.target_environment }}

  terragrunt_plan:
    name: "Terragrunt Plan"
    needs: [setup_environment]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.role_to_assume }}
          aws-region: ${{ env.aws_region }}

      - name: "Terragrunt Plan"
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ needs.setup_environment.outputs.working_dir }}
          tg_command: "plan"

  terragrunt_apply:
    name: "Terragrunt Apply"
    if: ( needs.setup_environment.outputs.target_operation == 'plan')
    needs: [setup_environment, terragrunt_plan]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.role_to_assume }}
          aws-region: ${{ env.aws_region }}

      - name: "Terragrunt Apply"
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ needs.setup_environment.outputs.working_dir }}
          tg_command: "apply -auto-approve"
